{"ast":null,"code":"var _jsxFileName = \"/Users/mjimenez/Desktop/chats/src/Store.js\";\nimport React from \"react\";\nimport io from \"socket.io-client\";\nexport const CTX = React.createContext(); //need user, msg, topic\n//state topic {msg} , {msg} , {msg} we do not want to lose messages\n\nconst initState = {\n  Global: [{\n    from: 'Miguel',\n    msg: 'Hello'\n  }, {\n    from: 'Ant',\n    msg: 'Hello'\n  }, {\n    from: 'Hojin',\n    msg: 'Hello'\n  }],\n  topic2: [{\n    from: 'Miguel',\n    msg: 'Hello'\n  }, {\n    from: 'Miguel',\n    msg: 'Hello'\n  }, {\n    from: 'Miguel',\n    msg: 'Hello'\n  }]\n};\n\nfunction reducer(state, action) {\n  const {\n    from,\n    msg,\n    topic\n  } = action.payload;\n\n  switch (action.type) {\n    case 'RECIEVE_MESSAGE':\n      return { ...state,\n        [topic]: [...state[topic], {\n          from,\n          msg\n        }]\n      };\n\n    default:\n      return state;\n  }\n}\n\nlet socket;\nexport default function Store(props) {\n  if (!socket) {\n    socket = io(':3001');\n  }\n\n  const [allChats] = React.useReducer(reducer, initState);\n  return /*#__PURE__*/React.createElement(CTX.Provider, {\n    value: {\n      allChats\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, props.children);\n}","map":{"version":3,"sources":["/Users/mjimenez/Desktop/chats/src/Store.js"],"names":["React","io","CTX","createContext","initState","Global","from","msg","topic2","reducer","state","action","topic","payload","type","socket","Store","props","allChats","useReducer","children"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAO,MAAMC,GAAG,GAAGF,KAAK,CAACG,aAAN,EAAZ,C,CAEP;AACA;;AAEA,MAAMC,SAAS,GAAG;AACdC,EAAAA,MAAM,EAAC,CACH;AAACC,IAAAA,IAAI,EAAE,QAAP;AAAiBC,IAAAA,GAAG,EAAE;AAAtB,GADG,EAEH;AAACD,IAAAA,IAAI,EAAE,KAAP;AAAcC,IAAAA,GAAG,EAAE;AAAnB,GAFG,EAGH;AAACD,IAAAA,IAAI,EAAE,OAAP;AAAgBC,IAAAA,GAAG,EAAE;AAArB,GAHG,CADO;AAMdC,EAAAA,MAAM,EAAC,CACH;AAACF,IAAAA,IAAI,EAAE,QAAP;AAAiBC,IAAAA,GAAG,EAAE;AAAtB,GADG,EAEH;AAACD,IAAAA,IAAI,EAAE,QAAP;AAAiBC,IAAAA,GAAG,EAAE;AAAtB,GAFG,EAGH;AAACD,IAAAA,IAAI,EAAE,QAAP;AAAiBC,IAAAA,GAAG,EAAE;AAAtB,GAHG;AANO,CAAlB;;AAaA,SAASE,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAE5B,QAAM;AAAEL,IAAAA,IAAF;AAAQC,IAAAA,GAAR;AAAaK,IAAAA;AAAb,MAAuBD,MAAM,CAACE,OAApC;;AAEA,UAAQF,MAAM,CAACG,IAAf;AACI,SAAK,iBAAL;AACI,aAAO,EACH,GAAGJ,KADA;AAEH,SAACE,KAAD,GAAS,CACL,GAAGF,KAAK,CAACE,KAAD,CADH,EAEL;AAACN,UAAAA,IAAD;AAAMC,UAAAA;AAAN,SAFK;AAFN,OAAP;;AAOJ;AACI,aAAOG,KAAP;AAVR;AAYH;;AAED,IAAIK,MAAJ;AAEA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAEjC,MAAI,CAACF,MAAL,EAAY;AACRA,IAAAA,MAAM,GAAGd,EAAE,CAAC,OAAD,CAAX;AACH;;AAED,QAAM,CAACiB,QAAD,IAAalB,KAAK,CAACmB,UAAN,CAAiBV,OAAjB,EAA0BL,SAA1B,CAAnB;AAKA,sBACI,oBAAC,GAAD,CAAK,QAAL;AAAc,IAAA,KAAK,EAAE;AAACc,MAAAA;AAAD,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,KAAK,CAACG,QADX,CADJ;AAKH","sourcesContent":["import React from \"react\";\nimport io from \"socket.io-client\"\nexport const CTX = React.createContext();\n\n//need user, msg, topic\n//state topic {msg} , {msg} , {msg} we do not want to lose messages\n\nconst initState = {\n    Global:[\n        {from: 'Miguel', msg: 'Hello'},\n        {from: 'Ant', msg: 'Hello'},\n        {from: 'Hojin', msg: 'Hello'},\n    ],\n    topic2:[\n        {from: 'Miguel', msg: 'Hello'},\n        {from: 'Miguel', msg: 'Hello'},\n        {from: 'Miguel', msg: 'Hello'},\n\n    ]\n}\nfunction reducer(state, action) {\n\n    const { from, msg, topic } = action.payload;\n\n    switch (action.type) {\n        case 'RECIEVE_MESSAGE':\n            return {\n                ...state,\n                [topic]: [\n                    ...state[topic],\n                    {from,msg}\n                    ]\n            }\n        default:\n            return state\n    }\n}\n\nlet socket;\n\nexport default function Store(props) {\n\n    if (!socket){\n        socket = io(':3001')\n    }\n\n    const [allChats] = React.useReducer(reducer, initState)\n\n\n\n\n    return (\n        <CTX.Provider value={{allChats}}>\n            {props.children}\n        </CTX.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}